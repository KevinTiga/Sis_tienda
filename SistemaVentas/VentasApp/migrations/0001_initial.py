# Generated by Django 5.1.3 on 2024-11-26 14:26

import VentasApp.validadores
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('cedula', models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(10), VentasApp.validadores.validacion_numeros])),
                ('nombre', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='El campo solo debe contener letras y espacios.', regex='^[a-zA-Z\\s]+$')])),
                ('apellido', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='El campo solo debe contener letras y espacios.', regex='^[a-zA-Z\\s]+$')])),
                ('telefono', models.CharField(max_length=10, validators=[VentasApp.validadores.validacion_numeros])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('direccion', models.CharField(max_length=200)),
                ('fecha_creacion', models.DateField(auto_now_add=True)),
                ('fecha_nacimiento', models.DateField(validators=[VentasApp.validadores.validar_fecha_nacimiento_cliente])),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'clientes',
            },
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('cedula', models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(10), VentasApp.validadores.validacion_numeros])),
                ('nombre', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El campo solo debe contener letras y espacios.', regex='^[a-zA-Z\\s]+$')])),
                ('apellido', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El campo solo debe contener letras y espacios.', regex='^[a-zA-Z\\s]+$')])),
                ('telefono', models.CharField(max_length=10, validators=[VentasApp.validadores.validacion_numeros])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('direccion', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_nacimiento', models.DateField(validators=[VentasApp.validadores.validacion_edad_maxima])),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'db_table': 'empleados',
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('ruc', models.CharField(max_length=13, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(10), VentasApp.validadores.validacion_numeros])),
                ('nombre', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El campo solo debe contener letras y espacios.', regex='^[a-zA-Z\\s]+$')])),
                ('direccion', models.TextField()),
                ('telefono', models.CharField(max_length=10, validators=[VentasApp.validadores.validacion_numeros])),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'db_table': 'empresas',
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('codigo', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('nombre', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El campo solo debe contener letras, números, comas, guiones y espacios.', regex='^[a-zA-Z0-9,.-ó\\s]+$')])),
                ('marca', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='El campo solo debe contener letras, números, comas, guiones y espacios.', regex='^[a-zA-Z0-9,.-ó\\s]+$')])),
                ('caracteristicas_categoria', models.CharField(choices=[('Bebidas', 'Bebidas'), ('Comida', 'Comida'), ('Liempeza', 'Liempeza'), ('Ropa', 'Ropa'), ('Varios', 'Varios')], max_length=100, validators=[django.core.validators.RegexValidator(message='El campo solo debe contener letras, números, comas, guiones y espacios.', regex='^[a-zA-Z0-9,.-ó\\s]+$')])),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cantidad_stock', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('fecha_ingreso', models.DateTimeField(auto_now_add=True)),
                ('fecha_elaboracion', models.DateField(validators=[VentasApp.validadores.validar_fecha_elaboracion])),
                ('fecha_vencimiento', models.DateField(default='2024-01-01')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'db_table': 'productos',
            },
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('codigo_factura', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_factura', models.DateTimeField(auto_now_add=True)),
                ('cantidad', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cantidad')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10)),
                ('iva', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=10)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facturas', to='VentasApp.cliente')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facturas', to='VentasApp.empleado')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facturas', to='VentasApp.producto')),
            ],
            options={
                'verbose_name': 'Factura',
                'verbose_name_plural': 'Facturas',
                'db_table': 'facturas',
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('cedula', models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(10), VentasApp.validadores.validacion_numeros])),
                ('nombre', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El campo solo debe contener letras y espacios.', regex='^[a-zA-Z\\s]+$')])),
                ('apellido', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El campo solo debe contener letras y espacios.', regex='^[a-zA-Z\\s]+$')])),
                ('telefono', models.CharField(max_length=10, validators=[VentasApp.validadores.validacion_numeros])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='VentasApp.empresa')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'db_table': 'proveedores',
            },
        ),
    ]
